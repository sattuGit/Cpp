#include <iostream>

using namespace std;

namespace spaceFirst  /*name space no access specifier , like public private .... in class */
{
	void display();
	class test
	{
	public :
		void display(){  
			cout<<"speceFirst::test::display()\n"<<endl;
			return ;
		}
		void sayWelcome();
	};
	
	class declareOut ;
	
}

namespace spaceFirst{  /*usinhg same namespace twice , its not redeclaration its extending */
	int extendedSpace = 777;
}


namespace std{
	int sattu=999;
}

void spaceFirst::display(){
	cout<<"spaceFirst::display()\n";
}
void spaceFirst::test::sayWelcome(){
	cout <<"spaceFirst::display \n";
}

class spaceFirst::declareOut
{
	public :
	void testOutSideSpace(){
		cout<<"spaceFirst::declareOut::testOutSideSpaace\n";
	}
	
};


/*The name of the namespace is uniquely generated by the compiler.
the unnamed namespace is assiable inside only within file
*/
namespace {
	int testUnnamed =66;
}

/* nested namespace */
namespace level1
{
	int l1=1;
	namespace level2
	{
		int l1=2;
	}
}

int main(){
	spaceFirst::display();
	spaceFirst::test *obj = new spaceFirst::test();
	spaceFirst::declareOut obj2;
	obj->display();
	obj->sayWelcome();
	obj2.testOutSideSpace();

	/*--------*/
	cout<<"Extended space "<<spaceFirst::extendedSpace<<endl;
	cout<<"Extended standerd space "<<std::sattu<<endl;

	//unnamed namespace
	std::cout<<testUnnamed<<std::endl;

	/*nested namespace */
	cout<<level1::l1<<endl;
	cout<<level1::level2::l1<<endl;
	return 0;
}
