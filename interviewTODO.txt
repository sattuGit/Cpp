Q:can construtor be a virtual 
ANS: NO 
Details :

two reasons I can think of:
Technical reason
The object exists only after the constructor ends.In order for the constructor to be dispatched using the virtual table , there has to be an existing object with a pointer to the virtual table , but how can a pointer to the virtual table exist if the object still doesn't exist? :)
Logic reason
You use the virtual keyword when you want to declare a somewhat polymorphic behaviour. But there is nothing polymorphic with constructors , constructors job in C++ is to simply put an object data on the memory . Since virtual tables (and polymorphism in general) are all about polymorphic behaviour rather on polymorphic data , There is no sense with declaring a virtual constructor.
-----------------------------------------------------------------
Q: what is base and drive both are virtual 
Ans : once a member function is declared as a virtual function in a base class, it becomes virtual in every class derived from that base class. 
writting keyword Virtual is not required 
-----------------------------------------------------------------
Q: size of class 
Ans : 
		sum of all memeber variales size 
	Special case :
		A) if no member variales then 1 byte 
		=> so that class have to have some memory which helps to assign address (each class should have unique address)
		B) in some case padding may occure 
		C) member functions and static data members are not participated in size of class  
		D) in case if Virtual additional memory for VTPR (Virtual Table pointer) (for 64 bit compiler it would be 8 byte)
		
		
Ref: https://www.includehelp.com/cpp-tutorial/size-of-a-class-in-cpp-padding-alignment-in-class-size-of-derived-class.aspx
-----------------------------------------------------------------
Q: find out combination of [012] all subset 
Q: write all 5 default function (move is also default need to make check) 
Q: linked list ka middile node find and print ,
	via : couner 
	via : pointer 
Q: take very big data (digit) 
	fund me paas karo , return sum and odd number 
	unsigen long long (any thing bigger then this )
Q: exception handling 
Q: Exception handling
	how to handle if code brok in production 
Q: assignmenr opertor, why we return this pointer 
-----------------------------------------------------------------
Q: Can we initalize static members in constructor ?
Ans: No.
	we can use static variable inside construtor but not inilalize 
	constructor is inbetween process of creating objects(while execution of constructor rutine , object is not in created state)
	but static members should be fully prepared when there definition loaded into memory 
	
Q what is dengling pointer 
Q name all default memebr method provided by compiler into a class 
Ans : Default copy , Default assignment, Default distructor, Default constructor , Defaul move (???? need to check)
Q: How to check datatype size without using sizeof 

Q print only unique char in string (Mphsis)
Q why we use new 
	https://isocpp.org/wiki/faq/freestore-mgmt
	https://www.learncpp.com/cpp-tutorial/dynamic-memory-allocation-with-new-and-delete/
	https://www.tutorialspoint.com/cplusplus/cpp_dynamic_memory.htm
	https://www.geeksforgeeks.org/variable-length-arrays-in-c-and-c/
	https://www.geeksforgeeks.org/memory-layout-of-c-program/
	https://www.geeksforgeeks.org/new-and-delete-operators-in-cpp-for-dynamic-memory/
	https://www.geeksforgeeks.org/overloading-new-delete-operator-c/
	https://www.modernescpp.com/index.php/overloading-operator-new-and-delete
	
Q Reverse string in word by word  <need to complete>

Q: type of pointer (smart/unique/auto .....) 
Q: auto x; ????

Q : why abstract class have distructor ?
Q why virtual distructor ?
Q https://stackoverflow.com/questions/6502828/what-does-default-mean-after-a-class-function-declaration
Q: tail-recursion optimization
Q: lambda function 
Q:14 â€“ C++ contains the functionality for returning an Rvalue from a called function. For example, it may contain a pointer to a string that was read from a file. In this context, what are the advantages of returning an Rvalue?
Q: what is functor 
Q: exit quit assert
Q: how to trigger function before main , before exit 
Q: 	int foo(int& x) {return x+1;}
	int bar(const int& x) {return x+1;}
	int i = foo(1);
	int i = bar(1);
	
	int x = 7;
	int &y = 7;
	const int& z = 7 ;
Q: using base 
Q: SOLID priciple 
Q: /Why-cant-we-overload-the-assignment-operator-using-the-friend-function
Q: self check in assignment operator overloading 
Q: how to use const variable in class 
	#include<iostream>
class A{
    const int a;
    public:
        A(int x=9):a{x}{std::cout<<"constructor A "<<x<<std::endl;} // it's allowed in initilization 
    int get(){return a;}
    void set(int x){*(const_cast<int*>(&a))=x;}
};

int main(){
    A a(3);
    std::cout<<a.get()<<std::endl;
    a.set(4);
    std::cout<<a.get()<<std::endl;
    
   A b[5]{A(1),A(2),A(3),A(4),A(5)};
   A c[5]={A(6),A(7),A(8),A(9),A(10)};
    
    A *x = new A[5]{A(11),A(12),A(13),A(14),A(15)};
    //A *x = new A[5]={A(11),A(12),A(13),A(14),A(15)};  // error compile 


    return EXIT_SUCCESS;
}

Q: dynamic allocate array of object with parametrized constrctor 
A: in above example

Q: conversion constructor 
Q:  explicit keyword 


Q static object , normal objecr declaration in main , order of execution 



